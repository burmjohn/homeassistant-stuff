blueprint:
  name: Control UltraPro Dimmer
  description: For UltraPro 39351 dimmer. Toggle a light with a single press, set it to max brightness with double-tap on, night-light mode with hold.
  domain: automation
  input:
    ultrapro_dimmer:
      name: UltraPro 39351 dimmer Switch
      description: List of available UltraPro 39351 dimmer switches.
      selector:
        device:
          integration: zwave_js
          manufacturer: UltraPro
          model: 39351 / ZW3010
    target_light:
      name: Light
      description: The light to link to button
      selector:
        target:
          entity:
            domain: light
    # scene_button:
    #   name: Scene Button
    #   description: The button to link to light
    #   selector:
    #     select:
    #       mode: dropdown
    #       options:
    #         - label: Scene 1 (Up)
    #           value: '001'
    #         - label: Scene 2 (Down)
    #           value: '002'
    night_light_brightness:
      name: Night Light Brightness
      description: Brightness to set lights to when button is held (default 20%)
      default: 20
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    normal_light_brightness:
      name: Normal Light Brightness
      description: Brightness to set lights to when button is held (default 80%)
      default: 80
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
mode: single
max_exceeded: silent
variables:
  controller_id: !input 'ultrapro_dimmer'
  light_id: !input 'target_light'
  # button_id: !input 'scene_button'
  night_light_brightness: !input 'night_light_brightness'
  normal_light_brightness: !input 'normal_light_brightness'
trigger:
- platform: event
  event_type: zwave_js_value_notification
condition: '{{ trigger.event.data.device_id == controller_id }}'
action:
- variables:
    property_key_name: '{{ trigger.event.data.property_key_name }}'
    label: '{{ trigger.event.data.label }}'
    command_class_name: '{{ trigger.event.data.command_class_name }}'
    value: '{{ trigger.event.data.value }}'
- service: logbook.log
  data:
    name: 'Z-Wave JS'
    message: 'received event: {{ command_class_name }} - {{ value }} - {{ label }}'
- choose:
  - conditions: '{{  property_key_name == ''001'' and value == ''KeyPressed2x'' }}'
    sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target: !input 'target_light'
  - conditions: '{{ property_key_name == ''001'' and value == ''KeyPressed3x'' }}'
    sequence:
      - service: light.turn_on
        data:
          brightness_pct: '{{ night_light_brightness }}'
        target: !input 'target_light'
  - conditions: '{{ property_key_name == ''002'' and value == ''KeyPressed2x'' }}'
    sequence:
      - service: light.off
        data: {}
        target: !input 'target_light'
  - conditions: '{{ property_key_name == ''002'' and value == ''KeyPressed3x'' }}'
    sequence:
      - service: light.turn_on
        data:
          brightness_pct: '{{ normal_light_brightness }}'
        target: !input 'target_light'